[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 1.8.0_271)
[debug] Load.defaultLoad until apply took 500.741844ms
[debug]           Load.loadUnit: plugins took 94.651684ms
[debug]           Load.loadUnit: defsScala took 0.435857ms
[debug] [Loading] Scanning directory /Users/rafaelbaring/Documents/RedMug/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/rafaelbaring/Documents/RedMug/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.811014 ms
[debug]               Load.resolveProject(redmug-build) took 56.2408ms
[debug]             Load.loadTransitive: finalizeProject(Project(id redmug-build, base: /Users/rafaelbaring/Documents/RedMug/project, plugins: List(<none>))) took 223.565796ms
[debug] [Loading] Done in /Users/rafaelbaring/Documents/RedMug/project, returning: (redmug-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 245.553442ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.489879ms
[debug]         Load.loadUnit(file:/Users/rafaelbaring/Documents/RedMug/project/, ...) took 348.905154ms
[debug]       Load.apply: load took 562.191623ms
[debug]       Load.apply: resolveProjects took 6.513392ms
[debug]       Load.apply: finalTransforms took 54.469273ms
[debug]       Load.apply: config.delegates took 7.44178ms
[debug]       Load.apply: Def.make(settings)... took 360.786793ms
[debug]       Load.apply: structureIndex took 96.713649ms
[debug]       Load.apply: mkStreams took 1.617979ms
[info] loading project definition from /Users/rafaelbaring/Documents/RedMug/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1909.725993ms
[debug]     Load.loadUnit: defsScala took 0.003717ms
[debug] [Loading] Scanning directory /Users/rafaelbaring/Documents/RedMug
[debug]       Load.loadUnit: mkEval took 9.257848ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/rafaelbaring/Documents/RedMug, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.359396 ms
[info] loading settings for project redmug from build.sbt ...
[debug]         Load.resolveProject(redmug) took 3.002006ms
[debug]       Load.loadTransitive: finalizeProject(Project(id redmug, base: /Users/rafaelbaring/Documents/RedMug, plugins: List(<none>))) took 5.928768ms
[debug] [Loading] Done in /Users/rafaelbaring/Documents/RedMug, returning: (redmug)
[debug]     Load.loadUnit: loadedProjectsRaw took 115.409487ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.371497ms
[debug]   Load.loadUnit(file:/Users/rafaelbaring/Documents/RedMug/, ...) took 2033.232751ms
[debug] Load.apply: load took 2056.836658ms
[debug] Load.apply: resolveProjects took 0.0976ms
[debug] Load.apply: finalTransforms took 9.674796ms
[debug] Load.apply: config.delegates took 0.346651ms
[debug] Load.apply: Def.make(settings)... took 132.041972ms
[debug] Load.apply: structureIndex took 22.667217ms
[debug] Load.apply: mkStreams took 0.003257ms
[info] set current project to KafkaProducerConsumerSbt (in build file:/Users/rafaelbaring/Documents/RedMug/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
